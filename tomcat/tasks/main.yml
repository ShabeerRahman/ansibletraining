---
# tasks file for tomcat
- name: enable open Jdk version 11
  ansible.builtin.command:  amazon-linux-extras enable "{{ java_version }}"
  when: ansible_facts['distribution'] == "Amazon"
- debug:
    var: ansible_facts['distribution']
#- name: Install open JDK 11
   #ansible.builtin.yum:
   #name: java-openjdk11
   #state: present
- name: Add tomcat  group
  ansible.builtin.group:
    name: "{{tomcat_group}}"
    state: present
    system: true
- name: Add Tomcat user
  ansible.builtin.user:
    name: "{{tomcat_user}}"
    group:
    create_home: true
    home: "{{tomcat_home}}"
    system: true
    shell: /bin/bash
- name: Download latest version of tomcat
  ansible.builtin.command: wget "{{ tomcat_url }}"
- name: create sym link
  ansible.builtin.unarchive:
    src: "{{ tomcat_srcpath }}/{{tomcat_zipfile}}.tar.gz"
    dest: "{{ tomcat_destpath }}"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    remote_src: true
- name: create tomcat service file
  ansible.builtin.template:
    src: "{{ tomcat_servicefiletemplate }}"
    dest: "{{ tomcat_servicepath }}/{{ tomcat_servicefile }}"
- name: create tomcat users file
  ansible.builtin.template:
    src: tomcat-users.xml.j2
    dest: "{{ tomcat_destpath }}/{{ tomcat_zipfile }}/conf/tomcat-users.xml"
- name: create tomcat server.xml file
  ansible.builtin.template:
    src: server.xml.j2
    dest: "{{ tomcat_destpath }}/{{ tomcat_zipfile }}/conf/server.xml"
  notify: start tomcat service
- name: add users to the server
  ansible.builtin.user:
    name: "{{item}}"
    state: present
  with_items:
    - "{{ users }}"
- name: copy files
  ansible.builtin.template:
    src: files.txt.j2
    dest: /tmp/files.txt
